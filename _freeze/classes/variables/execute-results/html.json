{
  "hash": "f15322c0b87d71c3c43bbdfa311f2adf",
  "result": {
    "markdown": "---\ntitle: \"Variables\"\nformat: html\ndate: 2023-02-21\ncategories:\n    - basics\n    - errors\ndescription: Introduction to the fundamental data types in Python.\n---\n\nToday we learn about [variables](../slides/variables.qmd){target=\"_blank\"}:\n\n- Strings\n- Numbers (integers and floats)\n- Booleans\n- Lists and similar objects\n- Dictionaries\n\n<div>\n\n```{=html}\n<iframe class=\"slide-deck\" src=\"../slides/variables.html\"></iframe>\n```\n\n</div>\n\n\n# What to do in Jupyter\n\nFollow along the presentation and copy (or rewrite) the code in your Jupyter Notebook. You can also write down extra notes as markdown and experiment with the different variable types.\n\n## Think about\n\n- Where do you see these kinds of variables in real life, especially at work?\n\n- How do you think you could use a list or a dictionary in translation?\n\n# What to do in VS Code\n\nSince we're just starting, let's keep it simple. Write a dictionary that defines properties of a person, a text, anything that interests you. For example:\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\nmy_dict = {\n    'title' : 'A hat full of sky',\n    'author' : 'Terry Pratchett',\n    'year' : 2004,\n    'language' : 'English',\n    'main_characters' : [\n        'Tiffany Aching',\n        'Granny Weatherwax',\n        'Rob Anybody'\n        ]\n}\nmy_dict\n```\n\n::: {.cell-output .cell-output-display execution_count=1}\n```\n{'title': 'A hat full of sky',\n 'author': 'Terry Pratchett',\n 'year': 2004,\n 'language': 'English',\n 'main_characters': ['Tiffany Aching', 'Granny Weatherwax', 'Rob Anybody']}\n```\n:::\n:::\n\n\nYou can leave Boolean values out, we'll see more about their use later.\n\nThen try to write a number of f-strings that combines different values from inside the dictionary and maybe further operations seen in class or the extra documentation (don't be afraid to Google!).\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\nsent_1 = f\"{my_dict['title'].title()} was written by {my_dict['author'].title()} in {my_dict['language']}.\"\nsent_2 = f\"It was published in {my_dict['year']}, that is, {2023-my_dict['year']} years ago.\"\nsent_3 = f\"The main characters are: {', '.join(my_dict['main_characters'])}.\"\n```\n:::\n\n\nFinally, join them all one last time with \"\\n\", which represents a change of line, and print the final output.\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\nbook_description = \"\\n\".join([sent_1, sent_2, sent_3])\nprint(book_description)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nA Hat Full Of Sky was written by Terry Pratchett in English.\nIt was published in 2004, that is, 19 years ago.\nThe main characters are: Tiffany Aching, Granny Weatherwax, Rob Anybody.\n```\n:::\n:::\n\n\nThis kind of procedure can be particularly useful when you need to log the behaviour of your code, i.e. printing information about the current values of variables.\n\n",
    "supporting": [
      "variables_files"
    ],
    "filters": [],
    "includes": {}
  }
}