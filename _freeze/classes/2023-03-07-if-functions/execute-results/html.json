{
  "hash": "3893fc93ded90352caf28c4945471f00",
  "result": {
    "markdown": "---\ntitle: \"Working with iterables\"\nformat: html\ndate: 2023-03-07\ncategories:\n    - conditions\n    - functions\n    - errors\n    - basics\ndescription: Introduction to if-statements and functions.\ndraft: true\n---\n\nToday we learn about [if-statements and functions](../slides/if-functions.qmd){target=\"_blank\"}:\n\n- Creating and if(-else)-statement.\n- Boolean statements.\n- Defining a function.\n- Reserved words: `return`, `raise`, `yield`...\n- `NameError`.\n\n<div>\n\n```{=html}\n<iframe class=\"slide-deck\" src=\"../slides/if-functions.html\"></iframe>\n```\n\n</div>\n\n\n# What to do in Jupyter\n\nFollow along the presentation and copy (or rewrite) the code in your Jupyter Notebook. You can also write down extra notes as markdown and experiment with the different variable types.\n\nWrite the code for the \"solo practice\" sections.\n\n# What to do in VS Code\n\n[Last class](2023-02-28-iterables.qmd) we created a list of dictionaries and ran a loop across them to print some statements.\n\n::: {.cell execution_count=1}\n``` {.python .cell-code code-fold=\"true\" code-summary=\"Show the code\"}\nhat_sky = {\n    'title' : 'A hat full of sky',\n    'author' : 'Terry Pratchett',\n    'year' : 2004,\n    'language' : 'English',\n    'main_characters' : [\n        'Tiffany Aching',\n        'Granny Weatherwax',\n        'Rob Anybody'\n        ]\n}\nsmall_gods = {\n    'title' : 'Small gods',\n    'author' : 'Terry Pratchett',\n    'year' : 1992,\n    'language' : 'English',\n    'main_characters' : [\n        'Om',\n        'Brutha'\n        ]\n}\ncolor_magic = {\n    'title' : 'The color of magic',\n    'author' : 'Terry Pratchett',\n    'year' : 1983,\n    'language' : 'English',\n    'main_characters' : [\n        'Rincewind',\n        'Twoflower'\n        ]\n}\nshepherd_crown = {\n    'title' : \"The shepherd's crown\",\n    'author' : 'Terry Pratchett',\n    'year' : 2015,\n    'language' : 'English',\n    'main_characters' : [\n        'Tiffany Aching',\n        'Nightshade',\n        'Peaseblossom'\n        ]\n}\ndiscworld_sample = [color_magic, small_gods, hat_sky, shepherd_crown]\nfor book in discworld_sample:\n    sent_1 = f\"{book['title'].title()} was written by {book['author'].title()} in {book['language']}.\"\n    sent_2 = f\"It was published in {book['year']}, that is, {2023-book['year']} years ago.\"\n    sent_3 = f\"The main characters are: {', '.join(book['main_characters'])}.\"\n    book_description = \" \".join([sent_1, sent_2, sent_3])\n    print(book_description)\n    print()\n```\n:::\n\n\nNow we will write a function that runs the piece of code that we applied to each book. We will also change the separator between sentences to a line change (\"\\n\").\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\ndef describe_book(book):\n    sent_1 = f\"{book['title'].title()} was written by {book['author'].title()} in {book['language']}.\"\n    sent_2 = f\"It was published in {book['year']}, that is, {2023-book['year']} years ago.\"\n    sent_3 = f\"The main characters are: {', '.join(book['main_characters'])}.\"\n    book_description = \"\\n\".join([sent_1, sent_2, sent_3])\n    print(book_description)\n```\n:::\n\n\nWe also want to check that the input argument `book` is a dictionary, that it contains the right keys and that their values are of the correct type. If any of these conditions are not fulfilled, we will raise an error.\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\ndef describe_book(book):\n    # check that the input is a dictionary\n    if type(book) != dict:\n        raise TypeError(\"Please provide a dictionary!\")\n    \n    # check that the dict has the right keys\n    for key in ['title', 'author', 'language', 'year', 'main_characters']:\n        if not key in book:\n            raise KeyError(f\"'{key}' is missing from the dictionary!\")\n        # check the types\n        if key == 'year':\n            if type(book[key]) != int:\n                raise TypeError(f\"The year should be an integer!\")\n        elif key == \"main_characters\":\n            if type(book[key]) != list:\n                raise TypeError(f\"The main characters should be provided as a list!\")\n        elif type(book[key]) != str:\n            raise TypeError(f\"The {key} should be a string!\")\n\n    sent_1 = f\"{book['title'].title()} was written by {book['author'].title()} in {book['language']}.\"\n    sent_2 = f\"It was published in {book['year']}, that is, {2023-book['year']} years ago.\"\n    sent_3 = f\"The main characters are: {', '.join(book['main_characters'])}.\"\n    book_description = \"\\n\".join([sent_1, sent_2, sent_3])\n    print(book_description)\n```\n:::\n\n\nThis function is getting very long, so we can create a different function to make our checks.\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\ndef check_book(book):\n    # check that the input is a dictionary\n    if type(book) != dict:\n        raise TypeError(\"Please provide a dictionary!\")\n    \n    # check that the dict has the right keys\n\n    for key in ['title', 'author', 'language', 'year', 'main_characters']:\n        if not key in book:\n            raise KeyError(f\"'{key}' is missing from the dictionary!\")\n        # check the types\n        if key == 'year':\n            if type(book[key]) != int:\n                raise TypeError(f\"The year should be an integer!\")\n        elif key == \"main_characters\":\n            if type(book[key]) != list:\n                raise TypeError(f\"The main characters should be provided as a list!\")\n        elif type(book[key]) != str:\n            raise TypeError(f\"The {key} should be a string!\")\n    return\n\ndef describe_book(book):\n    # check that the input is correct\n    check_book(book)\n\n    sent_1 = f\"{book['title'].title()} was written by {book['author'].title()} in {book['language']}.\"\n    sent_2 = f\"It was published in {book['year']}, that is, {2023-book['year']} years ago.\"\n    sent_3 = f\"The main characters are: {', '.join(book['main_characters'])}.\"\n    book_description = \"\\n\".join([sent_1, sent_2, sent_3])\n    print(book_description)\n```\n:::\n\n\nThen we can call our function with whatever we want: the right input and wrong input.\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\ndescribe_book(color_magic)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nThe Color Of Magic was written by Terry Pratchett in English.\nIt was published in 1983, that is, 40 years ago.\nThe main characters are: Rincewind, Twoflower.\n```\n:::\n:::\n\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\nfor book in discworld_sample:\n    describe_book(book)\n    print()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nThe Color Of Magic was written by Terry Pratchett in English.\nIt was published in 1983, that is, 40 years ago.\nThe main characters are: Rincewind, Twoflower.\n\nSmall Gods was written by Terry Pratchett in English.\nIt was published in 1992, that is, 31 years ago.\nThe main characters are: Om, Brutha.\n\nA Hat Full Of Sky was written by Terry Pratchett in English.\nIt was published in 2004, that is, 19 years ago.\nThe main characters are: Tiffany Aching, Granny Weatherwax, Rob Anybody.\n\nThe Shepherd'S Crown was written by Terry Pratchett in English.\nIt was published in 2015, that is, 8 years ago.\nThe main characters are: Tiffany Aching, Nightshade, Peaseblossom.\n\n```\n:::\n:::\n\n\nYou can try (in Jupyter Notebook) different bad-outputs to stress-test the checks.\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\ndescribe_book(\"The color of magic\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nTypeError: Please provide a dictionary!\n```\n:::\n:::\n\n\nWe can also add if-statements that don't raise erros.\n\n::: {.cell execution_count=8}\n``` {.python .cell-code}\ndef describe_book(book):\n    # check that the input is correct\n    check_book(book)\n\n    sent_1 = f\"{book['title'].title()} was written by {book['author'].title()} in {book['language']}.\"\n    \n    sent_2 = f\"It was published in {book['year']}, that is, {2023-book['year']} years ago.\"\n    if book['year'] < 1990:\n        sent_2 = sent_2 + \" (That's so long ago!)\"\n\n    sent_3 = f\"The main characters are: {', '.join(book['main_characters'])}.\"\n    book_description = \"\\n\".join([sent_1, sent_2, sent_3])\n    print(book_description)\ndescribe_book(color_magic)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nThe Color Of Magic was written by Terry Pratchett in English.\nIt was published in 1983, that is, 40 years ago. (That's so long ago!)\nThe main characters are: Rincewind, Twoflower.\n```\n:::\n:::\n\n\n::: {.cell execution_count=9}\n``` {.python .cell-code}\ndescribe_book(shepherd_crown)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nThe Shepherd'S Crown was written by Terry Pratchett in English.\nIt was published in 2015, that is, 8 years ago.\nThe main characters are: Tiffany Aching, Nightshade, Peaseblossom.\n```\n:::\n:::\n\n\n",
    "supporting": [
      "2023-03-07-if-functions_files"
    ],
    "filters": [],
    "includes": {}
  }
}